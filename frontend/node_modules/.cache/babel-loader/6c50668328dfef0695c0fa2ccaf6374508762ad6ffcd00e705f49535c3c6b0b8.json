{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cyber\\\\Desktop\\\\GITHUB\\\\CPS406Project\\\\frontend\\\\src\\\\admin\\\\income.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/admin.css\"; // Ensure you have this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonthlyReceipt = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [itemName, setItemName] = useState(\"\");\n  const [cost, setCost] = useState(\"\");\n  const [type, setType] = useState(\"revenue\");\n  const [incomeStatement, setIncomeStatement] = useState({\n    total_revenue: 0,\n    total_expenses: 0,\n    profit: 0\n  });\n  const [userId, setUserId] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [sentMessages, setSentMessages] = useState([]);\n  const [receivedMessages, setReceivedMessages] = useState([]);\n  useEffect(() => {\n    fetchIncomeStatement();\n    fetchTransactions();\n    fetchMessages();\n  }, []);\n  const fetchIncomeStatement = () => {\n    fetch(\"http://localhost:5000/income_statement\").then(response => response.json()).then(data => setIncomeStatement(data)).catch(error => console.error(\"Error fetching income statement:\", error));\n  };\n  const fetchTransactions = () => {\n    Promise.all([fetch(\"http://localhost:5000/api/revenues\"), fetch(\"http://localhost:5000/api/expenses\")]).then(([revenueResponse, expenseResponse]) => Promise.all([revenueResponse.json(), expenseResponse.json()])).then(([revenueData, expenseData]) => {\n      const unifiedTransactions = [...revenueData.map(item => ({\n        ...item,\n        type: \"Revenue\",\n        category: item.source\n      })), ...expenseData.map(item => ({\n        ...item,\n        type: \"Expense\",\n        category: item.category\n      }))];\n      setTransactions(unifiedTransactions);\n    }).catch(error => console.error(\"Error fetching transactions:\", error));\n  };\n  const fetchMessages = () => {\n    if (!userId) return; // Avoid fetching if no user ID is set\n    const sentMessagesUrl = `http://localhost:5000/api/messages/sent?userId=${userId}`;\n    const receivedMessagesUrl = `http://localhost:5000/api/messages/received?userId=${userId}`;\n    Promise.all([fetch(sentMessagesUrl).then(res => res.json()), fetch(receivedMessagesUrl).then(res => res.json())]).then(([sentData, receivedData]) => {\n      setSentMessages(sentData);\n      setReceivedMessages(receivedData);\n    }).catch(error => console.error(\"Error fetching messages:\", error));\n  };\n  const sendMessage = () => {\n    const notification = {\n      senderId: userId,\n      receiverId: userId,\n      // Adjust as needed\n      message: message\n    };\n    fetch(\"http://localhost:5000/send_message\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(notification)\n    }).then(response => response.json()).then(() => {\n      fetchMessages(); // Refresh the list of messages\n      setMessage(\"\"); // Clear the message input\n    }).catch(error => console.error(\"Error sending message:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"receipt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monthly Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sent-received-messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sent Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sentMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [msg.date, \": \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Received Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: receivedMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [msg.date, \": \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthlyReceipt, \"AvLcS9mAI1kge8tdDeqn9xv+q40=\");\n_c = MonthlyReceipt;\nexport default MonthlyReceipt;\nvar _c;\n$RefreshReg$(_c, \"MonthlyReceipt\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MonthlyReceipt","_s","transactions","setTransactions","itemName","setItemName","cost","setCost","type","setType","incomeStatement","setIncomeStatement","total_revenue","total_expenses","profit","userId","setUserId","message","setMessage","sentMessages","setSentMessages","receivedMessages","setReceivedMessages","fetchIncomeStatement","fetchTransactions","fetchMessages","fetch","then","response","json","data","catch","error","console","Promise","all","revenueResponse","expenseResponse","revenueData","expenseData","unifiedTransactions","map","item","category","source","sentMessagesUrl","receivedMessagesUrl","res","sentData","receivedData","sendMessage","notification","senderId","receiverId","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","index","date","_c","$RefreshReg$"],"sources":["C:/Users/cyber/Desktop/GITHUB/CPS406Project/frontend/src/admin/income.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/admin.css\"; // Ensure you have this CSS file for styling\r\n\r\nconst MonthlyReceipt = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [itemName, setItemName] = useState(\"\");\r\n  const [cost, setCost] = useState(\"\");\r\n  const [type, setType] = useState(\"revenue\");\r\n  const [incomeStatement, setIncomeStatement] = useState({\r\n    total_revenue: 0,\r\n    total_expenses: 0,\r\n    profit: 0,\r\n  });\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [sentMessages, setSentMessages] = useState([]);\r\n  const [receivedMessages, setReceivedMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchIncomeStatement();\r\n    fetchTransactions();\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  const fetchIncomeStatement = () => {\r\n    fetch(\"http://localhost:5000/income_statement\")\r\n      .then((response) => response.json())\r\n      .then((data) => setIncomeStatement(data))\r\n      .catch((error) =>\r\n        console.error(\"Error fetching income statement:\", error)\r\n      );\r\n  };\r\n\r\n  const fetchTransactions = () => {\r\n    Promise.all([\r\n      fetch(\"http://localhost:5000/api/revenues\"),\r\n      fetch(\"http://localhost:5000/api/expenses\"),\r\n    ])\r\n      .then(([revenueResponse, expenseResponse]) =>\r\n        Promise.all([revenueResponse.json(), expenseResponse.json()])\r\n      )\r\n      .then(([revenueData, expenseData]) => {\r\n        const unifiedTransactions = [\r\n          ...revenueData.map((item) => ({\r\n            ...item,\r\n            type: \"Revenue\",\r\n            category: item.source,\r\n          })),\r\n          ...expenseData.map((item) => ({\r\n            ...item,\r\n            type: \"Expense\",\r\n            category: item.category,\r\n          })),\r\n        ];\r\n        setTransactions(unifiedTransactions);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching transactions:\", error));\r\n  };\r\n\r\n  const fetchMessages = () => {\r\n    if (!userId) return; // Avoid fetching if no user ID is set\r\n    const sentMessagesUrl = `http://localhost:5000/api/messages/sent?userId=${userId}`;\r\n    const receivedMessagesUrl = `http://localhost:5000/api/messages/received?userId=${userId}`;\r\n\r\n    Promise.all([\r\n      fetch(sentMessagesUrl).then((res) => res.json()),\r\n      fetch(receivedMessagesUrl).then((res) => res.json()),\r\n    ])\r\n      .then(([sentData, receivedData]) => {\r\n        setSentMessages(sentData);\r\n        setReceivedMessages(receivedData);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching messages:\", error));\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    const notification = {\r\n      senderId: userId,\r\n      receiverId: userId, // Adjust as needed\r\n      message: message,\r\n    };\r\n\r\n    fetch(\"http://localhost:5000/send_message\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(notification),\r\n    })\r\n      .then((response) => response.json())\r\n      .then(() => {\r\n        fetchMessages(); // Refresh the list of messages\r\n        setMessage(\"\"); // Clear the message input\r\n      })\r\n      .catch((error) => console.error(\"Error sending message:\", error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"receipt-container\">\r\n      <h1>Monthly Transactions</h1>\r\n      {/* Additional UI and components */}\r\n      <div className=\"sent-received-messages\">\r\n        <h2>Sent Messages</h2>\r\n        <ul>\r\n          {sentMessages.map((msg, index) => (\r\n            <li key={index}>\r\n              {msg.date}: {msg.message}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <h2>Received Messages</h2>\r\n        <ul>\r\n          {receivedMessages.map((msg, index) => (\r\n            <li key={index}>\r\n              {msg.date}: {msg.message}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyReceipt;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}