{"ast":null,"code":"var _jsxFileName = \"C:\\\\CPS406Project\\\\frontend\\\\src\\\\admin\\\\income.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/admin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonthlyReceipt = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [itemName, setItemName] = useState(\"\");\n  const [cost, setCost] = useState(\"\");\n  const [type, setType] = useState(\"revenue\");\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/getexpenses\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch expenses\");\n        }\n        const data = await response.json(); // Convert response to JSON format\n        console.log(data); // Log the fetched expenses data\n\n        const mappedData = data.map(entry => ({\n          date: entry.date,\n          type: \"Expense\",\n          source: entry.source,\n          amount: entry.amount\n        }));\n        setTransactions(mappedData); // Update state with mapped data\n      } catch (error) {\n        console.error(\"Error fetching expenses:\", error);\n      }\n    };\n    const fetchRevenues = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/getrevenues\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch expenses\");\n        }\n        const data = await response.json(); // Convert response to JSON format\n        console.log(data); // Log the fetched expenses data\n\n        const mappedData = data.map(entry => ({\n          date: entry.date,\n          type: \"Expense\",\n          source: entry.source,\n          amount: entry.amount\n        }));\n        setTransactions(mappedData); // Update state with mapped data\n      } catch (error) {\n        console.error(\"Error fetching expenses:\", error);\n      }\n    };\n    fetchExpenses();\n  }, []);\n\n  // Calculate total revenue, total expenses, and profit\n  const totalRevenue = transactions.filter(transaction => transaction.type === \"Revenue\").reduce((acc, curr) => acc + curr.amount, 0);\n  const totalExpenses = transactions.filter(transaction => transaction.type === \"Expense\").reduce((acc, curr) => acc + curr.amount, 0);\n  const profit = totalRevenue - totalExpenses;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"receipt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Club Finances Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monthly Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-transaction-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: itemName,\n        onChange: e => setItemName(e.target.value),\n        placeholder: \"Item Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: cost,\n        onChange: e => setCost(e.target.value),\n        placeholder: \"Cost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: type,\n        onChange: e => setType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"revenue\",\n          children: \"Revenue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"expense\",\n          children: \"Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabletrans\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"transaction-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Source/Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", transaction.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"income-statement\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Revenue: $\", totalRevenue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Expenses: $\", totalExpenses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Profit: $\", profit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthlyReceipt, \"7+dmwVkvHa03qT4PXly3hinqYUc=\");\n_c = MonthlyReceipt;\nexport default MonthlyReceipt;\nvar _c;\n$RefreshReg$(_c, \"MonthlyReceipt\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MonthlyReceipt","_s","transactions","setTransactions","itemName","setItemName","cost","setCost","type","setType","fetchExpenses","response","fetch","method","headers","ok","Error","data","json","console","log","mappedData","map","entry","date","source","amount","error","fetchRevenues","totalRevenue","filter","transaction","reduce","acc","curr","totalExpenses","profit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","index","_c","$RefreshReg$"],"sources":["C:/CPS406Project/frontend/src/admin/income.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/admin.css\";\r\n\r\nconst MonthlyReceipt = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [itemName, setItemName] = useState(\"\");\r\n  const [cost, setCost] = useState(\"\");\r\n  const [type, setType] = useState(\"revenue\");\r\n  \r\n  useEffect(() => {\r\n    const fetchExpenses = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/getexpenses\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch expenses\");\r\n        }\r\n        \r\n        const data = await response.json(); // Convert response to JSON format\r\n        console.log(data); // Log the fetched expenses data\r\n\r\n        const mappedData = data.map((entry) => ({\r\n          date: entry.date,\r\n          type: \"Expense\",\r\n          source: entry.source,\r\n          amount: entry.amount,\r\n        }));\r\n        \r\n        setTransactions(mappedData); // Update state with mapped data\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching expenses:\", error);\r\n      }\r\n    };\r\n    \r\n    const fetchRevenues = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/getrevenues\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch expenses\");\r\n        }\r\n        \r\n        const data = await response.json(); // Convert response to JSON format\r\n        console.log(data); // Log the fetched expenses data\r\n\r\n        const mappedData = data.map((entry) => ({\r\n          date: entry.date,\r\n          type: \"Expense\",\r\n          source: entry.source,\r\n          amount: entry.amount,\r\n        }));\r\n        \r\n        setTransactions(mappedData); // Update state with mapped data\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching expenses:\", error);\r\n      }\r\n    };\r\n\r\n    fetchExpenses();\r\n  }, []);\r\n\r\n  // Calculate total revenue, total expenses, and profit\r\n  const totalRevenue = transactions\r\n    .filter((transaction) => transaction.type === \"Revenue\")\r\n    .reduce((acc, curr) => acc + curr.amount, 0);\r\n\r\n  const totalExpenses = transactions\r\n    .filter((transaction) => transaction.type === \"Expense\")\r\n    .reduce((acc, curr) => acc + curr.amount, 0);\r\n\r\n  const profit = totalRevenue - totalExpenses;\r\n\r\n  return (\r\n    <div className=\"receipt-container\">\r\n      <h1 className=\"title\">Club Finances Admin Dashboard</h1>\r\n      <h1>Monthly Transactions</h1>\r\n      <div className=\"add-transaction-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={itemName}\r\n          onChange={(e) => setItemName(e.target.value)}\r\n          placeholder=\"Item Name\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          value={cost}\r\n          onChange={(e) => setCost(e.target.value)}\r\n          placeholder=\"Cost\"\r\n        />\r\n        <select value={type} onChange={(e) => setType(e.target.value)}>\r\n          <option value=\"revenue\">Revenue</option>\r\n          <option value=\"expense\">Expense</option>\r\n        </select>\r\n        <button>Add Transaction</button>\r\n      </div>\r\n\r\n      <div className=\"tabletrans\">\r\n        <table className=\"transaction-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Type</th>\r\n              <th>Source/Category</th>\r\n              <th>Amount</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions.map((transaction, index) => (\r\n              <tr key={index}>\r\n                <td>{transaction.date}</td>\r\n                <td>{transaction.type}</td>\r\n                <td>{transaction.source}</td>\r\n                <td>${transaction.amount}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"income-statement\">\r\n        <h3>Total Revenue: ${totalRevenue}</h3>\r\n        <h3>Total Expenses: ${totalExpenses}</h3>\r\n        <h3>Profit: ${profit}</h3>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyReceipt;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}